SCALE FOR PROJECT MATCHA
Introduction
Please respect the following rules:

- Remain polite, courteous, respectful and constructive
throughout the correction process. The well-being of the community
depends on it.

- Identify with the person (or the group) graded the eventual
dysfunctions of the work. Take the time to discuss
and debate the problems you have identified.

- You must consider that there might be some difference in how your
peers might have understood the project's instructions and the
scope of its functionalities. Always keep an open mind and grade
him/her as honestly as possible. The pedagogy is valid only if
the peer-evaluation is conducted seriously.
Guidelines

- Only grade the work that is in the student or group's
GiT repository.

- Double-check that the GiT repository belongs to the student
or the group. Ensure that the work is for the relevant project
and also check that "git clone" is used in an empty folder.

- Check carefully that no malicious aliases was used to fool you
and make you evaluate something other than the content of the
official repository.

- To avoid any surprises, carefully check that both the correcting
and the corrected students have reviewed the possible scripts used
to facilitate the grading.

- If the correcting student has not completed that particular
project yet, it is mandatory for this student to read the
entire subject prior to starting the defence.

- Use the flags available on this scale to signal an empty repository,
non-functioning program, a norm error, cheating etc. In these cases,
the grading is over and the final grade is 0 (or -42 in case of
cheating). However, with the exception of cheating, you are
encouraged to continue to discuss your work (even if you have not
finished it) in order to identify any issues that may have caused
this failure and avoid repeating the same mistake in the future.

Attachments

Subject

Preliminaries

Subject allows the use of a micro-framework and only this. If
the tool used by the student (if tool there is) isn't in the
suggestion list, check that it's a micro-framework following
the subject definition. As a reminder:

> We will consider that a micro-framework has a router,
and eventually templating, but no ORM, validators or User
Accounts Manager.

If the tool used isn't a micro-framework, defense stops.

If at any time during defense, there is any warning, error or
notice in the web console, click on the "Crash" button at the
top of the scale. An error code from 500 to 599 is also
considered a Crash.
 Yes
 No

Security
The subject insisted on that point: the website must be secured.
Check at least the following points:
- Password are encripted in the database.
- Forms and uploads have correct validations.
- SQL injection isn't possible.

If at least one fails, the defense stops.
 Yes
 No

Features
User account management
The app must allow a user to register asking at least an
email address, a username, a last name, a first name and
a password that is somehow protected. (An english common
word shouldn't be accepted for example.)

A connected user must be able to fill an extended profile,
and must be able to update his information as well as the
one given during registration, at any time.
 Yes
 No

User connexion
The user must then be able to connect with his username
and password. He must be able to receive an email
allowing him to re-initialize his password should
the first one be forgotten.

To disconnect must be possible from any page on the site
with one click.
 Yes
 No

Consultations
The user must be able to check out the people that looked at his
profile (there mush be an history of visits) as well as the people
that "liked" him.
 Yes
 No

Fame rating
Each user must have a public fame rating. Ask the student to explain
his stategy regarding the computing of that score, it must be consistent
and a minimum relevant.
 Yes
 No

Geolocalisation
The user must be located using GPS positionning, up to his
neighborhood. If the user does not want to be positionned,
a way must found to locate him even without his knowledge.

The user must be able to modify his GPS position in his
profile.
 Yes
 No

Profile suggestion
The user must be able to easily get a list of suggestions when
connecting that match his profile.

Suggested profiles must be consistant with sexuality. If the
sexual orientation isn’t specified, the user will be considered
bi-sexual.

Check with the student that profile suggestions are weighted on
three criterias:
- Same geographic area as the user.
- With a maximum of common tags.
- With a maximum fame rating.

Ask the student to explain his strategy to display a list of
relevant suggestions.
 Yes
 No

Research
The user must be able to run an advanced research selecting
one or a few criterias such as:
- A age gap.
- A fame rating gap.
- A location.
- One or multiple interests tags.
 Yes
 No

Sort and filters
The suggestion list as well as the resulting list of a search must be
sortable and filterable by:
- Age.
- Location.
- Fame rating.
- Tags.
 Yes
 No

Profile of other users
A user must be able to consult the profile of other users,
that must contain all the information available about them,
except for the email address and the password.

The profile must show the fame rating and if the user is
connected and if not see the last connection date and time.
 Yes
 No

Connexion between users
A user can like or unlike the profile of another user. When two people
like each other, we will say that they are connected and can be able to
chat.

A user that doesn't have a profile picture can't like another user.

The profile of other users must clearly display if they're connected
with the current user or if they like the current user.
 Yes
 No

Report et bloking
It's possible to report a profile as "fake account" and block a specific
user. A blocked user won’t appear anymore in the research results (or in
suggestions) and won’t generate additional notifications.
 Yes
 No

Chat
When two users are connected, they must be able to chat in real time.
(We'll tolerate a 10 secondes delay).

The user must be able to see from any page if a new message is received.
 Yes
 No

Notifications
A user must be notified in real time (We'll also tolerate a
10 secondes delay) of the following events:

- The user received a "like".
- The user received a visit.
- The user received a message.
- A "liked" user "liked" back.
- A connected user "unliked" the current user.

A user must be able to see, from any page that a notification
hasn’t been read.
 Yes
 No

Good practice
Compatibility
Is the website compatible with Firefox (>= 41) and Chrome (>= 46)?
 Yes
 No

Mobile
Is the website usable on a mobile and on very small resolution?
 Yes
 No

Bonus
Omniauth strategy
The user can connect via Omniauth?
 Yes
 No

Additional bonus
It's possible here to give reward up to 5 additional bonuses. The
usefullness and relevance is up to the corrector to judge.

As examples here are the bonuses proposed in the subject:
- Import pictures from Facebook and/or Google+.
- Interactive map of the users.
- Etc...
Rate it from 0 (failed) through 5 (excellent)

Ratings
Don’t forget to check the flag corresponding to the defense

 Ok
 Outstanding project
 Empty work
 Incomplete work
 No author file
 Invalid compilation
 Norme
 Cheat
 Crash
Conclusion
Leave a comment on this evaluation
